#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iPhoneAppBackend_JSON_Sender_
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="test")]
	public partial class adminDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertpopup(popup instance);
    partial void Updatepopup(popup instance);
    partial void Deletepopup(popup instance);
    partial void Insertsetting(setting instance);
    partial void Updatesetting(setting instance);
    partial void Deletesetting(setting instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public adminDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["testConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public adminDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public adminDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public adminDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public adminDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<popup> popups
		{
			get
			{
				return this.GetTable<popup>();
			}
		}
		
		public System.Data.Linq.Table<setting> settings
		{
			get
			{
				return this.GetTable<setting>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.popup")]
	public partial class popup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _details;
		
		private string _button1;
		
		private string _button2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void Onbutton1Changing(string value);
    partial void Onbutton1Changed();
    partial void Onbutton2Changing(string value);
    partial void Onbutton2Changed();
    #endregion
		
		public popup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_button1", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string button1
		{
			get
			{
				return this._button1;
			}
			set
			{
				if ((this._button1 != value))
				{
					this.Onbutton1Changing(value);
					this.SendPropertyChanging();
					this._button1 = value;
					this.SendPropertyChanged("button1");
					this.Onbutton1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_button2", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string button2
		{
			get
			{
				return this._button2;
			}
			set
			{
				if ((this._button2 != value))
				{
					this.Onbutton2Changing(value);
					this.SendPropertyChanging();
					this._button2 = value;
					this.SendPropertyChanged("button2");
					this.Onbutton2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.settings")]
	public partial class setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _user_open_app;
		
		private System.Nullable<int> _user_open_app_count;
		
		private System.Nullable<int> _after_editing_countdown;
		
		private System.Nullable<int> _after_editing_color_countdown;
		
		private System.Nullable<int> _after_swiping_events;
		
		private System.Nullable<int> _after_share_or_save;
		
		private System.Nullable<int> _after_crate_new_event;
		
		private System.Nullable<int> _selecting_multiple_countdown;
		
		private System.Nullable<int> _selecting_countdown_in_multiple;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_open_appChanging(System.Nullable<int> value);
    partial void Onuser_open_appChanged();
    partial void Onuser_open_app_countChanging(System.Nullable<int> value);
    partial void Onuser_open_app_countChanged();
    partial void Onafter_editing_countdownChanging(System.Nullable<int> value);
    partial void Onafter_editing_countdownChanged();
    partial void Onafter_editing_color_countdownChanging(System.Nullable<int> value);
    partial void Onafter_editing_color_countdownChanged();
    partial void Onafter_swiping_eventsChanging(System.Nullable<int> value);
    partial void Onafter_swiping_eventsChanged();
    partial void Onafter_share_or_saveChanging(System.Nullable<int> value);
    partial void Onafter_share_or_saveChanged();
    partial void Onafter_crate_new_eventChanging(System.Nullable<int> value);
    partial void Onafter_crate_new_eventChanged();
    partial void Onselecting_multiple_countdownChanging(System.Nullable<int> value);
    partial void Onselecting_multiple_countdownChanged();
    partial void Onselecting_countdown_in_multipleChanging(System.Nullable<int> value);
    partial void Onselecting_countdown_in_multipleChanged();
    #endregion
		
		public setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_open_app", DbType="Int")]
		public System.Nullable<int> user_open_app
		{
			get
			{
				return this._user_open_app;
			}
			set
			{
				if ((this._user_open_app != value))
				{
					this.Onuser_open_appChanging(value);
					this.SendPropertyChanging();
					this._user_open_app = value;
					this.SendPropertyChanged("user_open_app");
					this.Onuser_open_appChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_open_app_count", DbType="Int")]
		public System.Nullable<int> user_open_app_count
		{
			get
			{
				return this._user_open_app_count;
			}
			set
			{
				if ((this._user_open_app_count != value))
				{
					this.Onuser_open_app_countChanging(value);
					this.SendPropertyChanging();
					this._user_open_app_count = value;
					this.SendPropertyChanged("user_open_app_count");
					this.Onuser_open_app_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_after_editing_countdown", DbType="Int")]
		public System.Nullable<int> after_editing_countdown
		{
			get
			{
				return this._after_editing_countdown;
			}
			set
			{
				if ((this._after_editing_countdown != value))
				{
					this.Onafter_editing_countdownChanging(value);
					this.SendPropertyChanging();
					this._after_editing_countdown = value;
					this.SendPropertyChanged("after_editing_countdown");
					this.Onafter_editing_countdownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_after_editing_color_countdown", DbType="Int")]
		public System.Nullable<int> after_editing_color_countdown
		{
			get
			{
				return this._after_editing_color_countdown;
			}
			set
			{
				if ((this._after_editing_color_countdown != value))
				{
					this.Onafter_editing_color_countdownChanging(value);
					this.SendPropertyChanging();
					this._after_editing_color_countdown = value;
					this.SendPropertyChanged("after_editing_color_countdown");
					this.Onafter_editing_color_countdownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_after_swiping_events", DbType="Int")]
		public System.Nullable<int> after_swiping_events
		{
			get
			{
				return this._after_swiping_events;
			}
			set
			{
				if ((this._after_swiping_events != value))
				{
					this.Onafter_swiping_eventsChanging(value);
					this.SendPropertyChanging();
					this._after_swiping_events = value;
					this.SendPropertyChanged("after_swiping_events");
					this.Onafter_swiping_eventsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_after_share_or_save", DbType="Int")]
		public System.Nullable<int> after_share_or_save
		{
			get
			{
				return this._after_share_or_save;
			}
			set
			{
				if ((this._after_share_or_save != value))
				{
					this.Onafter_share_or_saveChanging(value);
					this.SendPropertyChanging();
					this._after_share_or_save = value;
					this.SendPropertyChanged("after_share_or_save");
					this.Onafter_share_or_saveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_after_crate_new_event", DbType="Int")]
		public System.Nullable<int> after_crate_new_event
		{
			get
			{
				return this._after_crate_new_event;
			}
			set
			{
				if ((this._after_crate_new_event != value))
				{
					this.Onafter_crate_new_eventChanging(value);
					this.SendPropertyChanging();
					this._after_crate_new_event = value;
					this.SendPropertyChanged("after_crate_new_event");
					this.Onafter_crate_new_eventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_selecting_multiple_countdown", DbType="Int")]
		public System.Nullable<int> selecting_multiple_countdown
		{
			get
			{
				return this._selecting_multiple_countdown;
			}
			set
			{
				if ((this._selecting_multiple_countdown != value))
				{
					this.Onselecting_multiple_countdownChanging(value);
					this.SendPropertyChanging();
					this._selecting_multiple_countdown = value;
					this.SendPropertyChanged("selecting_multiple_countdown");
					this.Onselecting_multiple_countdownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_selecting_countdown_in_multiple", DbType="Int")]
		public System.Nullable<int> selecting_countdown_in_multiple
		{
			get
			{
				return this._selecting_countdown_in_multiple;
			}
			set
			{
				if ((this._selecting_countdown_in_multiple != value))
				{
					this.Onselecting_countdown_in_multipleChanging(value);
					this.SendPropertyChanging();
					this._selecting_countdown_in_multiple = value;
					this.SendPropertyChanged("selecting_countdown_in_multiple");
					this.Onselecting_countdown_in_multipleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _passowrd;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpassowrdChanging(string value);
    partial void OnpassowrdChanged();
    #endregion
		
		public user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passowrd", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string passowrd
		{
			get
			{
				return this._passowrd;
			}
			set
			{
				if ((this._passowrd != value))
				{
					this.OnpassowrdChanging(value);
					this.SendPropertyChanging();
					this._passowrd = value;
					this.SendPropertyChanged("passowrd");
					this.OnpassowrdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
